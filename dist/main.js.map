{"version":3,"file":"main.js","sources":["webpack://bundling_test/./node_modules/.pnpm/sst@2.43.3_@aws-sdk+client-sso-oidc@3.606.0/node_modules/sst/context/context2.js","webpack://bundling_test/./node_modules/.pnpm/sst@2.43.3_@aws-sdk+client-sso-oidc@3.606.0/node_modules/sst/context/handler.js","webpack://bundling_test/./src/index.ts"],"sourcesContent":["import { AsyncLocalStorage } from \"async_hooks\";\nexport class ContextNotFoundError extends Error {\n    name;\n    constructor(name) {\n        super(`${name} context was not provided. It is possible you have multiple versions of SST installed.`);\n        this.name = name;\n    }\n}\nlet count = 0;\nexport function create(name) {\n    const storage = new AsyncLocalStorage();\n    const children = [];\n    // notify all memos to reset\n    function reset() {\n        for (const child of children) {\n            child();\n        }\n    }\n    const ctx = {\n        name,\n        with(value, cb) {\n            const version = (++count).toString();\n            return storage.run({ value, version }, () => {\n                return runWithCleanup(cb, () => reset());\n            });\n        },\n        use() {\n            const memo = ContextMemo.getStore();\n            // use is being called within a memo, so track dependency\n            if (memo) {\n                memo.deps.push(ctx);\n                children.push(memo.reset);\n            }\n            const result = storage.getStore();\n            if (result === undefined)\n                throw new ContextNotFoundError(name);\n            return result.value;\n        },\n        version() {\n            const result = storage.getStore();\n            if (result === undefined)\n                throw new ContextNotFoundError(name);\n            return result.version;\n        },\n    };\n    return ctx;\n}\nconst ContextMemo = new AsyncLocalStorage();\nexport function memo(cb) {\n    const deps = [];\n    const cache = new Map();\n    const children = [];\n    let tracked = false;\n    function key() {\n        return deps.map((dep) => dep.version()).join(\",\");\n    }\n    function reset() {\n        cache.delete(key());\n        for (const child of children) {\n            child();\n        }\n    }\n    function save(value) {\n        cache.set(key(), value);\n    }\n    return () => {\n        const child = ContextMemo.getStore();\n        if (child) {\n            child.deps.push({ version: () => key() });\n            children.push(child.reset);\n        }\n        // Memo never run so build up dependency list\n        if (!tracked) {\n            return ContextMemo.run({ deps, reset }, () => {\n                return runWithCleanup(cb, (result) => {\n                    tracked = true;\n                    save(result);\n                });\n            });\n        }\n        const cached = cache.get(key());\n        if (cached) {\n            return cached;\n        }\n        const result = cb();\n        save(result);\n        return result;\n    };\n}\nfunction runWithCleanup(cb, cleanup) {\n    const result = cb();\n    if (result &&\n        typeof result === \"object\" &&\n        \"then\" in result &&\n        typeof result.then === \"function\") {\n        return result.then((value) => {\n            // cleanup\n            cleanup(result);\n            return value;\n        });\n    }\n    cleanup(result);\n    return result;\n}\nexport const Context = {\n    create,\n    memo,\n};\n","import { create } from \"./context2.js\";\nconst RequestContext = create(\"RequestContext\");\nexport function useContextType() {\n    const ctx = RequestContext.use();\n    return ctx.type;\n}\nexport function useEvent(type) {\n    const ctx = RequestContext.use();\n    if (ctx.type !== type)\n        throw new Error(`Expected ${type} event`);\n    return ctx.event;\n}\nexport function useLambdaContext() {\n    const ctx = RequestContext.use();\n    return ctx.context;\n}\nexport function Handler(type, cb) {\n    return function handler(event, context) {\n        return RequestContext.with({ type, event: event, context }, () => cb(event, context));\n    };\n}\n","import { Handler, useEvent } from \"sst/context\";\n\nexport const handler = Handler(\"api\", async (evt, ctx) => {\n  const method = useEvent('api')['requestContext']['http']['method']\n\n    if (method === \"OPTIONS\") {\n      return {\n        statusCode: 200\n      }\n    } else if (method === \"GET\") {\n      return {\n        statusCode: 200,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: \"get request requested!\"\n        })\n      }\n    } else if (method === \"POST\") {\n      return {\n        statusCode: 200,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: \"post request requested!\"\n        })\n      }\n    } else {\n      return {\n        statusCode: 404,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: \"Not Found\"\n        })\n      }\n    }\n});"],"names":["ContextNotFoundError","Error","name","constructor","count","create","storage","children","ctx","with","value","cb","version","toString","run","runWithCleanup","cleanup","result","then","reset","child","use","memo","ContextMemo","getStore","deps","push","undefined","RequestContext","useEvent","type","event","Handler","context","evt","method","statusCode","headers","body","JSON","stringify","message"],"mappings":"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"}