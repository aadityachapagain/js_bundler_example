{"version":3,"file":"bundle.js","sources":["webpack://bundling_test/./node_modules/.pnpm/sst@2.43.3_@aws-sdk+client-sso-oidc@3.606.0/node_modules/sst/context/context2.js","webpack://bundling_test/./node_modules/.pnpm/sst@2.43.3_@aws-sdk+client-sso-oidc@3.606.0/node_modules/sst/context/handler.js","webpack://bundling_test/./src/index.ts"],"sourcesContent":["import { AsyncLocalStorage } from \"async_hooks\";\nexport class ContextNotFoundError extends Error {\n    name;\n    constructor(name) {\n        super(`${name} context was not provided. It is possible you have multiple versions of SST installed.`);\n        this.name = name;\n    }\n}\nlet count = 0;\nexport function create(name) {\n    const storage = new AsyncLocalStorage();\n    const children = [];\n    // notify all memos to reset\n    function reset() {\n        for (const child of children) {\n            child();\n        }\n    }\n    const ctx = {\n        name,\n        with(value, cb) {\n            const version = (++count).toString();\n            return storage.run({ value, version }, () => {\n                return runWithCleanup(cb, () => reset());\n            });\n        },\n        use() {\n            const memo = ContextMemo.getStore();\n            // use is being called within a memo, so track dependency\n            if (memo) {\n                memo.deps.push(ctx);\n                children.push(memo.reset);\n            }\n            const result = storage.getStore();\n            if (result === undefined)\n                throw new ContextNotFoundError(name);\n            return result.value;\n        },\n        version() {\n            const result = storage.getStore();\n            if (result === undefined)\n                throw new ContextNotFoundError(name);\n            return result.version;\n        },\n    };\n    return ctx;\n}\nconst ContextMemo = new AsyncLocalStorage();\nexport function memo(cb) {\n    const deps = [];\n    const cache = new Map();\n    const children = [];\n    let tracked = false;\n    function key() {\n        return deps.map((dep) => dep.version()).join(\",\");\n    }\n    function reset() {\n        cache.delete(key());\n        for (const child of children) {\n            child();\n        }\n    }\n    function save(value) {\n        cache.set(key(), value);\n    }\n    return () => {\n        const child = ContextMemo.getStore();\n        if (child) {\n            child.deps.push({ version: () => key() });\n            children.push(child.reset);\n        }\n        // Memo never run so build up dependency list\n        if (!tracked) {\n            return ContextMemo.run({ deps, reset }, () => {\n                return runWithCleanup(cb, (result) => {\n                    tracked = true;\n                    save(result);\n                });\n            });\n        }\n        const cached = cache.get(key());\n        if (cached) {\n            return cached;\n        }\n        const result = cb();\n        save(result);\n        return result;\n    };\n}\nfunction runWithCleanup(cb, cleanup) {\n    const result = cb();\n    if (result &&\n        typeof result === \"object\" &&\n        \"then\" in result &&\n        typeof result.then === \"function\") {\n        return result.then((value) => {\n            // cleanup\n            cleanup(result);\n            return value;\n        });\n    }\n    cleanup(result);\n    return result;\n}\nexport const Context = {\n    create,\n    memo,\n};\n","import { create } from \"./context2.js\";\nconst RequestContext = create(\"RequestContext\");\nexport function useContextType() {\n    const ctx = RequestContext.use();\n    return ctx.type;\n}\nexport function useEvent(type) {\n    const ctx = RequestContext.use();\n    if (ctx.type !== type)\n        throw new Error(`Expected ${type} event`);\n    return ctx.event;\n}\nexport function useLambdaContext() {\n    const ctx = RequestContext.use();\n    return ctx.context;\n}\nexport function Handler(type, cb) {\n    return function handler(event, context) {\n        return RequestContext.with({ type, event: event, context }, () => cb(event, context));\n    };\n}\n","import { Handler, useEvent } from \"sst/context\";\nexport const handler = Handler(\"api\", async (evt, ctx) => {\n    const method = useEvent('api')['requestContext']['http']['method'];\n    if (method === \"OPTIONS\") {\n        return {\n            statusCode: 200\n        };\n    }\n    else if (method === \"GET\") {\n        return {\n            statusCode: 200,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                message: \"get request requested!\"\n            })\n        };\n    }\n    else if (method === \"POST\") {\n        return {\n            statusCode: 200,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                message: \"post request requested!\"\n            })\n        };\n    }\n    else {\n        return {\n            statusCode: 404,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                message: \"Not Found\"\n            })\n        };\n    }\n});\n"],"names":[],"mappings":";;;;;;;;AAAgD;AACzC;AACP;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACO;AACP,wBAAwB,0IAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,0IAAiB;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;AC3GuC;AACvC,uBAAuB,oDAAM;AACtB;AACP;AACA;AACA;AACO;AACP;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA,qCAAqC,6BAA6B;AAClE;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBgD;AACzC,gBAAgB,oDAAO;AAC9B,mBAAmB,qDAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC"}